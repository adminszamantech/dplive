
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  detectRuntime,
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.8.1
 * Query Engine version: 78caf6feeaed953168c64e15a249c3e9a033ebe2
 */
Prisma.prismaVersion = {
  client: "5.8.1",
  engine: "78caf6feeaed953168c64e15a249c3e9a033ebe2"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.NotFoundError = () => {
  throw new Error(`NotFoundError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  throw new Error(`Extensions.getExtensionContext is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.defineExtension = () => {
  throw new Error(`Extensions.defineExtension is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AuthorsScalarFieldEnum = {
  author_id: 'author_id',
  author_type: 'author_type',
  author_name: 'author_name',
  author_name_bn: 'author_name_bn',
  author_slug: 'author_slug',
  author_initial: 'author_initial',
  author_initial_bn: 'author_initial_bn',
  author_bio: 'author_bio',
  author_bio_bn: 'author_bio_bn',
  img_path: 'img_path',
  deletable: 'deletable',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Bn_adsScalarFieldEnum = {
  id: 'id',
  type: 'type',
  page: 'page',
  position: 'position',
  dfp_header_code: 'dfp_header_code',
  code: 'code',
  desktop_image_path: 'desktop_image_path',
  mobile_image_path: 'mobile_image_path',
  external_link: 'external_link',
  start_time: 'start_time',
  end_time: 'end_time',
  status: 'status',
  deletable: 'deletable',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Bn_breaking_newsScalarFieldEnum = {
  id: 'id',
  news_title: 'news_title',
  news_link: 'news_link',
  position: 'position',
  hours: 'hours',
  user_id: 'user_id',
  expired_time: 'expired_time',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Bn_categoriesScalarFieldEnum = {
  cat_id: 'cat_id',
  cat_type: 'cat_type',
  cat_name: 'cat_name',
  cat_name_bn: 'cat_name_bn',
  cat_slug: 'cat_slug',
  cat_title: 'cat_title',
  cat_meta_keyword: 'cat_meta_keyword',
  cat_meta_description: 'cat_meta_description',
  cat_position: 'cat_position',
  top_menu: 'top_menu',
  footer_menu: 'footer_menu',
  status: 'status',
  deletable: 'deletable',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Bn_content_positionsScalarFieldEnum = {
  position_id: 'position_id',
  position_name: 'position_name',
  position_slug: 'position_slug',
  cat_id: 'cat_id',
  special_cat_id: 'special_cat_id',
  subcat_id: 'subcat_id',
  content_ids: 'content_ids',
  total_content: 'total_content',
  status: 'status',
  deletable: 'deletable',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Bn_contentsScalarFieldEnum = {
  content_id: 'content_id',
  content_type: 'content_type',
  cat_id: 'cat_id',
  subcat_id: 'subcat_id',
  special_cat_id: 'special_cat_id',
  country_id: 'country_id',
  division_id: 'division_id',
  district_id: 'district_id',
  upozilla_id: 'upozilla_id',
  content_heading: 'content_heading',
  content_sub_heading: 'content_sub_heading',
  author_slugs: 'author_slugs',
  author_name: 'author_name',
  content_brief: 'content_brief',
  content_details: 'content_details',
  img_xs_path: 'img_xs_path',
  img_sm_path: 'img_sm_path',
  img_sm_caption: 'img_sm_caption',
  img_bg_path: 'img_bg_path',
  og_image: 'og_image',
  img_bg_caption: 'img_bg_caption',
  related_ids: 'related_ids',
  photo_ids: 'photo_ids',
  video_type: 'video_type',
  video_id: 'video_id',
  uploader_id: 'uploader_id',
  reporter_id: 'reporter_id',
  tags: 'tags',
  meta_keywords: 'meta_keywords',
  timeline_tag: 'timeline_tag',
  podcast_id: 'podcast_id',
  status: 'status',
  scroll: 'scroll',
  total_hit: 'total_hit',
  deletable: 'deletable',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Bn_mobile_adsScalarFieldEnum = {
  id: 'id',
  type: 'type',
  page: 'page',
  position: 'position',
  dfp_header_code: 'dfp_header_code',
  code: 'code',
  mobile_image_path: 'mobile_image_path',
  external_link: 'external_link',
  start_time: 'start_time',
  end_time: 'end_time',
  status: 'status',
  deletable: 'deletable',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Bn_position_fixedScalarFieldEnum = {
  id: 'id',
  position_number: 'position_number',
  news_id: 'news_id',
  is_fixed: 'is_fixed',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Bn_subcategoriesScalarFieldEnum = {
  subcat_id: 'subcat_id',
  cat_id: 'cat_id',
  subcat_name: 'subcat_name',
  subcat_name_bn: 'subcat_name_bn',
  subcat_slug: 'subcat_slug',
  subcat_meta_keyword: 'subcat_meta_keyword',
  subcat_meta_description: 'subcat_meta_description',
  subcat_position: 'subcat_position',
  status: 'status',
  deletable: 'deletable',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Bn_tagsScalarFieldEnum = {
  tag_id: 'tag_id',
  tag_type: 'tag_type',
  tag_name: 'tag_name',
  tag_slug: 'tag_slug',
  description: 'description',
  img_path: 'img_path',
  approval: 'approval',
  deletable: 'deletable',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Bn_video_categoriesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  name_bn: 'name_bn',
  meta_keywords: 'meta_keywords',
  meta_description: 'meta_description',
  og_img_path: 'og_img_path',
  position: 'position',
  user_id: 'user_id',
  status: 'status',
  deletable: 'deletable',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Bn_video_positionsScalarFieldEnum = {
  position_id: 'position_id',
  position_name: 'position_name',
  cat_id: 'cat_id',
  subcat_id: 'subcat_id',
  video_ids: 'video_ids',
  total_video: 'total_video',
  deletable: 'deletable',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Bn_videosScalarFieldEnum = {
  id: 'id',
  cat_id: 'cat_id',
  type: 'type',
  title: 'title',
  code: 'code',
  img_bg_path: 'img_bg_path',
  img_sm_path: 'img_sm_path',
  img_xs_path: 'img_xs_path',
  link: 'link',
  meta_keywords: 'meta_keywords',
  meta_description: 'meta_description',
  user_id: 'user_id',
  target: 'target',
  is_live: 'is_live',
  status: 'status',
  deletable: 'deletable',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.CountriesScalarFieldEnum = {
  country_id: 'country_id',
  country_name: 'country_name',
  country_name_bn: 'country_name_bn',
  country_slug: 'country_slug',
  deletable: 'deletable',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.DistrictsScalarFieldEnum = {
  district_id: 'district_id',
  division_id: 'division_id',
  district_name: 'district_name',
  district_name_bn: 'district_name_bn',
  district_slug: 'district_slug',
  district_title: 'district_title',
  meta_description: 'meta_description',
  deletable: 'deletable',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.DivisionsScalarFieldEnum = {
  division_id: 'division_id',
  division_name: 'division_name',
  division_name_bn: 'division_name_bn',
  division_slug: 'division_slug',
  deletable: 'deletable',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ElectionsScalarFieldEnum = {
  id: 'id',
  title: 'title',
  total_center: 'total_center',
  casted_center: 'casted_center',
  party_one_name: 'party_one_name',
  party_two_name: 'party_two_name',
  party_three_name: 'party_three_name',
  party_four_name: 'party_four_name',
  party_one_logo: 'party_one_logo',
  party_two_logo: 'party_two_logo',
  party_three_logo: 'party_three_logo',
  party_four_logo: 'party_four_logo',
  party_one_votes: 'party_one_votes',
  party_two_votes: 'party_two_votes',
  party_three_votes: 'party_three_votes',
  party_four_votes: 'party_four_votes',
  status: 'status',
  deletable: 'deletable',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Epaper_pagesScalarFieldEnum = {
  id: 'id',
  epaper_id: 'epaper_id',
  img_path: 'img_path',
  img_thumb_path: 'img_thumb_path',
  img_large_path: 'img_large_path',
  page_no: 'page_no',
  user_id: 'user_id',
  deletable: 'deletable',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.EpapersScalarFieldEnum = {
  id: 'id',
  paper_date: 'paper_date',
  total_page: 'total_page',
  meta_keywords: 'meta_keywords',
  meta_description: 'meta_description',
  og_img_path: 'og_img_path',
  user_id: 'user_id',
  status: 'status',
  deletable: 'deletable',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Magazine_pagesScalarFieldEnum = {
  id: 'id',
  magazine_id: 'magazine_id',
  img_path: 'img_path',
  img_thumb_path: 'img_thumb_path',
  img_large_path: 'img_large_path',
  counter: 'counter',
  user_id: 'user_id',
  deletable: 'deletable',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.MagazinesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  total_page: 'total_page',
  meta_keywords: 'meta_keywords',
  meta_description: 'meta_description',
  og_img_path: 'og_img_path',
  user_id: 'user_id',
  status: 'status',
  deletable: 'deletable',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Manual_documentsScalarFieldEnum = {
  doc_id: 'doc_id',
  doc_path: 'doc_path',
  deletable: 'deletable',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Manual_photosScalarFieldEnum = {
  photo_id: 'photo_id',
  img_path: 'img_path',
  deletable: 'deletable',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Mis_usersScalarFieldEnum = {
  user_id: 'user_id',
  user_type: 'user_type',
  admin_id: 'admin_id',
  dept_type: 'dept_type',
  user_name: 'user_name',
  user_name_bn: 'user_name_bn',
  user_slug: 'user_slug',
  user_initial: 'user_initial',
  user_initial_bn: 'user_initial_bn',
  user_bio: 'user_bio',
  user_bio_bn: 'user_bio_bn',
  img_path: 'img_path',
  deletable: 'deletable',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Monthly_foldersScalarFieldEnum = {
  folder_id: 'folder_id',
  folder_name: 'folder_name',
  deletable: 'deletable',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.P_album_positionsScalarFieldEnum = {
  position_id: 'position_id',
  position_name: 'position_name',
  position_slug: 'position_slug',
  cat_id: 'cat_id',
  special_cat_id: 'special_cat_id',
  subcat_id: 'subcat_id',
  content_ids: 'content_ids',
  total_content: 'total_content',
  status: 'status',
  deletable: 'deletable',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.P_albumsScalarFieldEnum = {
  album_id: 'album_id',
  cat_id: 'cat_id',
  subcat_id: 'subcat_id',
  album_name: 'album_name',
  short_description: 'short_description',
  album_details: 'album_details',
  photographer_name: 'photographer_name',
  tag: 'tag',
  status: 'status',
  total_hit: 'total_hit',
  deletable: 'deletable',
  user_id: 'user_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.P_categoriesScalarFieldEnum = {
  cat_id: 'cat_id',
  cat_name: 'cat_name',
  cat_name_bn: 'cat_name_bn',
  cat_slug: 'cat_slug',
  cat_meta_keyword: 'cat_meta_keyword',
  cat_meta_description: 'cat_meta_description',
  cat_position: 'cat_position',
  top_menu: 'top_menu',
  footer_menu: 'footer_menu',
  status: 'status',
  deletable: 'deletable',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.P_galleriesScalarFieldEnum = {
  id: 'id',
  album_id: 'album_id',
  photo: 'photo',
  photo_capture: 'photo_capture',
  feature_image: 'feature_image',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.P_subcategoriesScalarFieldEnum = {
  subcat_id: 'subcat_id',
  cat_id: 'cat_id',
  subcat_name: 'subcat_name',
  subcat_name_bn: 'subcat_name_bn',
  subcat_slug: 'subcat_slug',
  subcat_meta_keyword: 'subcat_meta_keyword',
  subcat_meta_description: 'subcat_meta_description',
  subcat_position: 'subcat_position',
  status: 'status',
  deletable: 'deletable',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Site_settingsScalarFieldEnum = {
  id: 'id',
  site_name: 'site_name',
  favicon: 'favicon',
  logo: 'logo',
  logo_header: 'logo_header',
  logo_footer: 'logo_footer',
  title: 'title',
  meta_keywords: 'meta_keywords',
  meta_description: 'meta_description',
  og_image: 'og_image',
  post_ogimage: 'post_ogimage',
  social_links: 'social_links',
  facebook: 'facebook',
  twitter: 'twitter',
  google_plus: 'google_plus',
  youtube: 'youtube',
  instagram: 'instagram',
  linkedin: 'linkedin',
  editor_meta: 'editor_meta',
  address: 'address',
  copyright: 'copyright',
  show_special: 'show_special',
  special_title: 'special_title',
  special_link: 'special_link',
  show_live_tv: 'show_live_tv',
  show_video_live_tv: 'show_video_live_tv',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SurveysScalarFieldEnum = {
  survey_id: 'survey_id',
  title: 'title',
  from_date: 'from_date',
  to_date: 'to_date',
  ha: 'ha',
  na: 'na',
  no_comment: 'no_comment',
  status: 'status',
  deletable: 'deletable',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.UpozillasScalarFieldEnum = {
  upozilla_id: 'upozilla_id',
  district_id: 'district_id',
  division_id: 'division_id',
  upozilla_name: 'upozilla_name',
  upozilla_name_bn: 'upozilla_name_bn',
  upozilla_title: 'upozilla_title',
  upozilla_slug: 'upozilla_slug',
  meta_description: 'meta_description',
  deletable: 'deletable',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.UsersScalarFieldEnum = {
  id: 'id',
  name: 'name',
  designation: 'designation',
  username: 'username',
  email: 'email',
  email_verified_at: 'email_verified_at',
  password: 'password',
  two_factor_secret: 'two_factor_secret',
  two_factor_recovery_codes: 'two_factor_recovery_codes',
  role: 'role',
  bn_cat_ids: 'bn_cat_ids',
  status: 'status',
  visibility: 'visibility',
  deletable: 'deletable',
  remember_token: 'remember_token',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.CounterScalarFieldEnum = {
  id: 'id',
  counter_name: 'counter_name',
  counter_time: 'counter_time',
  time: 'time',
  date: 'date',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.MigrationsScalarFieldEnum = {
  id: 'id',
  migration: 'migration',
  batch: 'batch'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  authors: 'authors',
  bn_ads: 'bn_ads',
  bn_breaking_news: 'bn_breaking_news',
  bn_categories: 'bn_categories',
  bn_content_positions: 'bn_content_positions',
  bn_contents: 'bn_contents',
  bn_mobile_ads: 'bn_mobile_ads',
  bn_position_fixed: 'bn_position_fixed',
  bn_subcategories: 'bn_subcategories',
  bn_tags: 'bn_tags',
  bn_video_categories: 'bn_video_categories',
  bn_video_positions: 'bn_video_positions',
  bn_videos: 'bn_videos',
  countries: 'countries',
  districts: 'districts',
  divisions: 'divisions',
  elections: 'elections',
  epaper_pages: 'epaper_pages',
  epapers: 'epapers',
  magazine_pages: 'magazine_pages',
  magazines: 'magazines',
  manual_documents: 'manual_documents',
  manual_photos: 'manual_photos',
  mis_users: 'mis_users',
  monthly_folders: 'monthly_folders',
  p_album_positions: 'p_album_positions',
  p_albums: 'p_albums',
  p_categories: 'p_categories',
  p_galleries: 'p_galleries',
  p_subcategories: 'p_subcategories',
  site_settings: 'site_settings',
  surveys: 'surveys',
  upozillas: 'upozillas',
  users: 'users',
  counter: 'counter',
  migrations: 'migrations'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        const runtime = detectRuntime()
        const edgeRuntimeName = {
          'workerd': 'Cloudflare Workers',
          'deno': 'Deno and Deno Deploy',
          'netlify': 'Netlify Edge Functions',
          'edge-light': 'Vercel Edge Functions',
        }[runtime]

        let message = 'PrismaClient is unable to run in '
        if (edgeRuntimeName !== undefined) {
          message += edgeRuntimeName + '. As an alternative, try Accelerate: https://pris.ly/d/accelerate.'
        } else {
          message += 'this browser environment, or has been bundled for the browser (running in `' + runtime + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://github.com/prisma/prisma/issues`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
