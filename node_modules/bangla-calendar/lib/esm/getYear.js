import { isValidDate, errorMessage, formatYear, startJulianDate, yearLength, getJulianDate } from './utils.js';

var getYearIN = function (year, month, day) {
    var julianDate = getJulianDate(year, month + 1, day);
    if (julianDate < startJulianDate) {
        throw new Error(errorMessage);
    }
    return Math.floor((julianDate - startJulianDate) / yearLength) + 1;
};
function getYear(date, options) {
    if (date === void 0) { date = new Date(); }
    if (options === void 0) { options = { format: 'YYYY', calculationMethod: 'BD' }; }
    if (!isValidDate(date)) {
        throw new Error(errorMessage);
    }
    var inputDate = new Date(date);
    var day = inputDate.getUTCDate();
    var month = inputDate.getMonth();
    var year = inputDate.getFullYear();
    var format = options.format, _a = options.calculationMethod, calculationMethod = _a === void 0 ? 'BD' : _a;
    if (calculationMethod === 'IN') {
        return formatYear(getYearIN(year, month, day), format);
    }
    var banglaYear = year - 593;
    if (month < 3 || (month === 3 && day < 14)) {
        banglaYear = year - 594;
    }
    if (banglaYear < 1) {
        throw new Error(errorMessage);
    }
    return formatYear(banglaYear, format);
}

export { getYear };
